<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
    <script>
    </script>
  </head>
  <body>
    <p>
      원시 타입
      숫자,불린값,null 과 undefined
      변수할당시 메모리 상에 고정된 크기로 저장.
    </p>
    <script>
    var x = 100;
    var y = x; // y에 값을 복사
    x = 1; // x값 변경
    console.log(y); //100
    </script>
    <p>
      참조 타입
      객체,배열,함수
      데이터 크기가 정해져있지 않고 변수에 할당될 때 값이 직접 해당 변수에 저장될 수 없으며,
      변수에는 데이터에 대한 참조만 저장된다.
      참조는 참조 타입 데이터의 주소이지 해당 데이터의 값이 아니다.
    </p>
    <script>
    var x = {count : 100};
    var y = x;
    x.count = 1;
    console.log(y.count);
    </script>
    <p>
      문자열 변수 복사
      자바스크립트에서 문자열은 크기가 고정되어 있지 않지만 원시 타입처럼 동작한다.
      각 변수 간에 문자열 데이터를 복사할 경우 문자열 값이 복사된 것으로 간주할 수 있다.
    </p>
    <script>
    var x = "Hello";
    var y = x;
    x = "Hi";
    console.log(x); // Hi
    console.log(y); //Hello
    </script>
    <p>
      원시타입 리턴받기
      function a(test) {
      return test;
      }
    </p>
    <script>
    var a = function a(test){
      return test;
    };
    var b = a(1);
    console.log("우가우가",b);
    var c = b;
    console.log("우가우가",c);
    b = a(2)
    console.log("우가우가",b);
    console.log("우가우가",c);
    </script>
    <p>
      참조타입 리턴받기
      function b(test) {
      var obj = {test: test};
      return obj;
      }
    </p>
    <script>
    var a = function(test){
      var obj = {test: test};
      return obj;
    };
    var b = a(1);
    // b = {test: 1};
    console.log("Charm",b);
    var c = b;
    // c = {test: 1};
    console.log("Charm",c);

    b.test = 7;
    // b = {test: 2};
    console.log("Charm",b.test);
    console.log("Charm",c.test);
    </script>
  </body>
</html>
